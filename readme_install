
sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
NODE_MAJOR=20
echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
sudo apt-get update
sudo apt-get install nodejs -y
node -v
npm i aptos
sudo npm install -g pnpm
sudo apt install python3-pip
pip3 install aptos-sdk
git clone https://github.com/aptos-labs/aptos-core.git
curl -fsSL "https://aptos.dev/scripts/install_cli.py" | python3

/home/ubuntu/.local/bin/aptos  init

/home/ubuntu/.local/bin/aptos  init
Configuring for profile default
Choose network from [devnet, testnet, mainnet, local, custom | defaults to devnet]

No network given, using devnet...
Enter your private key as a hex literal (0x...) [Current: None | No input: Generate new key (or keep one if present)]

No key given, generating key...
Account 0x68501796e038c63b063a7272b4f0998bab9697082c587ca4c84848cdb8fc8134 doesn't exist, creating it and funding it with 100000000 Octas
Account 0x68501796e038c63b063a7272b4f0998bab9697082c587ca4c84848cdb8fc8134 funded successfully

---
Aptos CLI is now set up for account 0x68501796e038c63b063a7272b4f0998bab9697082c587ca4c84848cdb8fc8134 as profile default!  Run `aptos --help` for more information about commands
{
  "Result": "Success"
}

### now set up the hello_blockchain envinronment for our token vesting contract
### set Toml.move
cd aptos-core/aptos-move/move-examples/hello_blockchain
vi Move.toml   # change name to token_vesting


[package]
name = "Examples"
version = "0.0.0"

[addresses]
token_vesting = "_"

[dependencies]
AptosFramework = { local = "../../framework/aptos-framework" }


cd sources
rm *.move
vi token_vesting.move
### add in the contract
https://github.com/mokshyaprotocol/aptos-token-vesting



ubuntu@ip-172-31-38-64:~/aptos-core/aptos-move/move-examples/hello_blockchain$ /home/ubuntu/.local/bin/aptos move compile --named-addresses token_vesting="0x68501796e038c63b063a7272b4f0998bab9697082c587ca4c84848cdb8fc8134"
Compiling, may take a little while to download git dependencies...
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING Examples
{
  "Result": [
    "68501796e038c63b063a7272b4f0998bab9697082c587ca4c84848cdb8fc8134::vesting"
  ]
}















ubuntu@ip-172-31-38-64:~/aptos-core/aptos-move/move-examples/hello_blockchain$  /home/ubuntu/.local/bin/aptos move test --named-addresses token_vesting=default
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING Examples
Running Move unit tests
[ FAIL    ] 0x68501796e038c63b063a7272b4f0998bab9697082c587ca4c84848cdb8fc8134::vesting::test_vesting

Test failures:

Failures in 0x68501796e038c63b063a7272b4f0998bab9697082c587ca4c84848cdb8fc8134::vesting:




┌── test_vesting ──────
│ error[E11001]: test failure
│    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/../../framework/aptos-framework/sources/timestamp.move:62:9
│    │
│ 61 │     public fun now_microseconds(): u64 acquires CurrentTimeMicroseconds {
│    │                ---------------- In this function in 0x1::timestamp
│ 62 │         borrow_global<CurrentTimeMicroseconds>(@aptos_framework).microseconds
│    │         ^^^^^^^^^^^^^ Test was not expected to error, but it gave a MISSING_DATA (code 4008) error originating in the module 0000000000000000000000000000000000000000000000000000000000000001::timestamp rooted here
│
│
│ stack trace
│       timestamp::now_seconds(/home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/../../framework/aptos-framework/sources/timestamp.move:68)
│       vesting::release_fund(/home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/token_vesting.move:96)
│       vesting::test_vesting(/home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/token_vesting.move:156-160)
│
└──────────────────

Test result: FAILED. Total tests: 1; passed: 0; failed: 1
{
  "Error": "Move unit tests failed"
}










compile 
ubuntu@ip-172-31-37-219:~/aptos-core/aptos-move/move-examples/hello_blockchain$ /home/ubuntu/.local/bin/aptos move compile --named-addresses token_vesting="0x190a200c1aee3d56e5651dcdf6421f371de0b1c1e2846b53629921a2601f2d1e"
Compiling, may take a little while to download git dependencies...
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING Examples
{
  "Result": [
    "190a200c1aee3d56e5651dcdf6421f371de0b1c1e2846b53629921a2601f2d1e::vesting"
  ]
}

/home/ubuntu/.local/bin/aptos move publish --named-addresses token_vesting="0x190a200c1aee3d56e5651dcdf6421f371de0b1c1e2846b53629921a2601f2d1e"
Compiling, may take a little while to download git dependencies...
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING Examples
package size 3827 bytes
Do you want to submit a transaction for a range of [271500 - 407200] Octas at a gas unit price of 100 Octas? [yes/no] >
yes
{
  "Result": {
    "transaction_hash": "0x69dc19cf86919b7a78957951781c499ec715a2fd6374c6fd97afd31c4a889d0c",
    "gas_used": 2715,
    "gas_unit_price": 100,
    "sender": "190a200c1aee3d56e5651dcdf6421f371de0b1c1e2846b53629921a2601f2d1e",
    "sequence_number": 0,
    "success": true,
    "timestamp_us": 1702238314471921,
    "version": 4211617,
    "vm_status": "Executed successfully"
  }
}



ubuntu@ip-172-31-37-219:~/aptos-core/ecosystem/typescript/sdk/examples/typescript$ pnpm run vesting

> ts-test@1.0.0 vesting /home/ubuntu/aptos-core/ecosystem/typescript/sdk/examples/typescript
> ts-node vesting.ts

wfti    s
wft
what happened
{
  hash: '0x3d84d055db46fe50f6619f4581c5a32bcb966f35679bde42cfeb60d18d04867d',
  sender: '0xb3b9aba88135a210ef20038d399b30ab8dbf50fdec4631f5f986f620465555e6',
  sequence_number: '0',
  max_gas_amount: '200000',
  gas_unit_price: '100',
  expiration_timestamp_secs: '1702238660',
  payload: {
    function: '0x190a200c1aee3d56e5651dcdf6421f371de0b1c1e2846b53629921a2601f2d1e::vesting::release_fund',
    type_arguments: [ '0x1::aptos_coin::AptosCoin' ],
    arguments: [
      '0xbb54a075a0362928febb962e384b4e9d188cd725a12dd0a4ab2c09d91a6de42d',
      '0x78797a'
    ],
    type: 'entry_function_payload'
  },
  signature: {
    public_key: '0xb3c7e4574474854f0d0ff5b623d2dfee0ffa758e30a057aff329c8c2f1d88b4e',
    signature: '0x6cfc0292aefeb4786eb964ce60f7c43cf8a1ddd95c48d574a11d50d5c9f1046c9e2b77437d9cda44de4a52c3b2bac1cdb0dc9134d581de8bc3f6ddfaf619e807',
    type: 'ed25519_signature'
  }
}
























copy running on EC2 AWS:  
i-05dc2566c0c579e46







ubuntu@ip-172-31-41-15:~/aptos-core/ecosystem/typescript/sdk/examples/typescript$ vi package.json
{
  "name": "ts-test",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "bcs_transaction": "ts-node bcs_transaction.ts",
    "multisig_account": "ts-node multisig_account.ts",
    "multisig_managed_coin": "ts-node multisig_managed_coin.ts",
    "multisig_transaction": "ts-node multisig_transaction.ts",
    "simple_nft": "ts-node simple_nft.ts",
    "simple_aptos_token": "ts-node simple_aptos_token.ts",
    "transfer_coin": "ts-node transfer_coin.ts",
    "test": "run-s bcs_transaction multisig_transaction simple_nft transfer_coin",
    "your_coin": "ts-node your_coin.ts",
    "your_fungible_asset": "ts-node your_fungible_asset.ts",
    "call_aptos_cli": "ts-node call_aptos_cli.ts",
    "ambassador": "ts-node ambassador",
    "knight": "ts-node knight",
    "gas_fee_payer": "ts-node gas_fee_payer",
    "vesting":  "ts-node vesting.ts"

  },




ubuntu@ip-172-31-41-15:~/aptos-core/ecosystem/typescript/sdk/examples/typescript$ vi package.json

# i needed to add vesting to the package.json file.....

{
  "name": "ts-test",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "bcs_transaction": "ts-node bcs_transaction.ts",
    "multisig_account": "ts-node multisig_account.ts",
    "multisig_managed_coin": "ts-node multisig_managed_coin.ts",
    "multisig_transaction": "ts-node multisig_transaction.ts",
    "simple_nft": "ts-node simple_nft.ts",
    "simple_aptos_token": "ts-node simple_aptos_token.ts",
    "transfer_coin": "ts-node transfer_coin.ts",
    "test": "run-s bcs_transaction multisig_transaction simple_nft transfer_coin",
    "your_coin": "ts-node your_coin.ts",
    "your_fungible_asset": "ts-node your_fungible_asset.ts",
    "call_aptos_cli": "ts-node call_aptos_cli.ts",
    "ambassador": "ts-node ambassador",
    "knight": "ts-node knight",
    "gas_fee_payer": "ts-node gas_fee_payer",
    "vesting":  "ts-node vesting.ts"

  },

2. ) next, I had to make the following changes to vdsting.ts


//import dotenv from "dotenv";
//dotenv.config();

//import { AptosClient, AptosAccount, CoinClient, FaucetClient } from "aptos";
//import { NODE_URL, FAUCET_URL } from "./common";

import { AptosClient, AptosAccount, FaucetClient, } from "aptos";

//URLS
const NODE_URL = process.env.APTOS_NODE_URL || "https://fullnode.devnet.aptoslabs.com";
const FAUCET_URL = process.env.APTOS_FAUCET_URL || "https://faucet.devnet.aptoslabs.com";

//clients
const client = new AptosClient(NODE_URL);
const faucetClient = new FaucetClient(NODE_URL, FAUCET_URL);
////Accounts
// sender Account
const account1 = new AptosAccount();
// receiver Account
const account2 = new AptosAccount();
//token vesting program id
const pid="a286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1";
//Token Vesting Smart Contract
// describe("Token Vesting", () => {
 // it ("Creating Vesting", async () => {
console.log("wfti    s");

(async () => {
console.log("wft");
  await faucetClient.fundAccount(account1.address(), 1000000000);//Airdropping
    //Time and Amounts
    const now = Math.floor(Date.now() / 1000)
    //Any discrete amount and corresponding time
    //can be provided to get variety of payment schedules
    const release_amount =[10000, 50000, 10000, 30000];
    const release_time_increment =[ 3, 20, 30];
    var release_time:BigInt[]=[BigInt(now)]
    release_time_increment.forEach((item) => {
      let val=BigInt(now+item);
      release_time.push(val);
    });
    const create_vesting_payloads = {
      type: "entry_function_payload",
      function: pid+"::vesting::create_vesting",
      type_arguments: ["0x1::aptos_coin::AptosCoin"],
      arguments: [account2.address(),release_amount,release_time,100000,"xyz"],
    };
    let txnRequest = await client.generateTransaction(account1.address(), create_vesting_payloads);
    let bcsTxn = AptosClient.generateBCSTransaction(account1, txnRequest);
    let x = await client.submitSignedBCSTransaction(bcsTxn);
    console.log(x);
  });
  //Function
//  it ("Get Funds", async () => {


(async () => {


  await faucetClient.fundAccount(account2.address(), 1000000000);//Airdropping
    //the receiver gets allocated fund as required

console.log("what happened");


  const create_getfunds_payloads = {
      type: "entry_function_payload",
      function: pid+"::vesting::release_fund",
      type_arguments: ["0x1::aptos_coin::AptosCoin"],
      arguments: [account1.address(),"xyz"],
    };
    let txnRequest = await client.generateTransaction(account2.address(), create_getfunds_payloads);
    let bcsTxn = AptosClient.generateBCSTransaction(account2, txnRequest);
    let x=await client.submitSignedBCSTransaction(bcsTxn);
    console.log(x);
  });


//});


















ubuntu@ip-172-31-41-15:~/aptos-token-vesting$ /home/ubuntu/.local/bin/aptos init
Configuring for profile default
Choose network from [devnet, testnet, mainnet, local, custom | defaults to devnet]

No network given, using devnet...
Enter your private key as a hex literal (0x...) [Current: None | No input: Generate new key (or keep one if present)]

No key given, generating key...
Account 0x7fdc96d149abde999c5af7b80234a77c1cb2f13dee999bdb8417ec9773834d5f doesn't exist, creating it and funding it with 100000000 Octas
Account 0x7fdc96d149abde999c5af7b80234a77c1cb2f13dee999bdb8417ec9773834d5f funded successfully

---
Aptos CLI is now set up for account 0x7fdc96d149abde999c5af7b80234a77c1cb2f13dee999bdb8417ec9773834d5f as profile default!  Run `aptos --help` for more information about commands
{
  "Result": "Success"
}










0xa286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1



/home/ubuntu/.local/bin/aptos move compile --named-addresses token_vesting="0xa286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1"



/home/ubuntu/.local/bin/aptos move publish --named-addresses token_vesting="a286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1"





ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain$
/home/ubuntu/.local/bin/aptos init
Aptos already initialized for profile default, do you want to overwrite the existing config? [yes/no] >
yes
Configuring for profile default
Choose network from [devnet, testnet, mainnet, local, custom | defaults to devnet]
evnet
{
  "Error": "Invalid arguments: Invalid network evnet.  Must be one of [devnet, testnet, mainnet, local, custom]"
}
ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain$ /home/ubuntu/.local/bin/aptos init
Aptos already initialized for profile default, do you want to overwrite the existing config? [yes/no] >
yes
Configuring for profile default
Choose network from [devnet, testnet, mainnet, local, custom | defaults to devnet]

No network given, using devnet...
Enter your private key as a hex literal (0x...) [Current: Redacted | No input: Generate new key (or keep one if present)]

No key given, keeping existing key...
Account 0xa286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1 has been already found onchain

---
Aptos CLI is now set up for account 0xa286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1 as profile default!  Run `aptos --help` for more information about commands
{
  "Result": "Success"
}
ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain$

/home/ubuntu/.local/bin/aptos move compile --named-addresses token_vesting="0xa286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1"
Compiling, may take a little while to download git dependencies...
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING Examples
{
  "Result": [
    "a286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1::vesting"
  ]
}
ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain$
/home/ubuntu/.local/bin/aptos move publish --named-addresses token_vesting="a286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1"
Compiling, may take a little while to download git dependencies...
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING Examples
package size 3827 bytes
Do you want to submit a transaction for a range of [271500 - 407200] Octas at a gas unit price of 100 Octas? [yes/no] >
yes
{
  "Result": {
    "transaction_hash": "0xd48fd6c1bbea038f9b22fedebaf84f324daf0c93eeba1153ddffc84813af95e1",
    "gas_used": 2715,
    "gas_unit_price": 100,
    "sender": "a286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1",
    "sequence_number": 10,
    "success": true,
    "timestamp_us": 1701896368684596,
    "version": 17532927,
    "vm_status": "Executed successfully"
  }
}
ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain$ /home/ubuntu/.local/bin/aptos move test
{
  "Error": "Unexpected error: Failed to run tests: Unresolved addresses found: [\nNamed address 'token_vesting' in package 'Examples'\n]\nTo fix this, add an entry for each unresolved address to the [addresses] section of /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/Move.toml: e.g.,\n[addresses]\nstd = \"0x1\"\nAlternatively, you can also define [dev-addresses] and call with the --dev flag"
}
ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain$ ls
Move.toml  build  sources
ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain$ vi Move.toml
ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain$








ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain$ /home/ubuntu/.local/bin/aptos move test
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING Examples
Running Move unit tests
[ FAIL    ] 0xa286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1::vesting::test_vesting

Test failures:

Failures in 0xa286b9e594f7f5fae0aab9f764abc58ab54c9a6575ee63fd43cf9c0bd20ab8a1::vesting:

┌── test_vesting ──────
│ error[E11001]: test failure
│    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/../../framework/aptos-framework/sources/timestamp.move:62:9
│    │
│ 61 │     public fun now_microseconds(): u64 acquires CurrentTimeMicroseconds {
│    │                ---------------- In this function in 0x1::timestamp
│ 62 │         borrow_global<CurrentTimeMicroseconds>(@aptos_framework).microseconds
│    │         ^^^^^^^^^^^^^ Test was not expected to error, but it gave a MISSING_DATA (code 4008) error originating in the module 0000000000000000000000000000000000000000000000000000000000000001::timestamp rooted here
│
│
│ stack trace
│       timestamp::now_seconds(/home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/../../framework/aptos-framework/sources/timestamp.move:68)
│       vesting::release_fund(/home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/token_vesting.move:96)
│       vesting::test_vesting(/home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/token_vesting.move:156-160)
│
└──────────────────

Test result: FAILED. Total tests: 1; passed: 0; failed: 1
{
  "Error": "Move unit tests failed"
}
ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move0




pnpm run /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/tests/vesting.ts





ubuntu@ip-172-31-41-15:~/aptos-core/aptos-move/move-examples/hello_blockchain/tests$





  I cannot run the vesting.ts to save my life

  I had to rename to the (first transaction) script to get it to run appropriately.



  https://medium.com/mokshyaprotocol/write-your-first-smart-contract-on-aptos-a-step-by-step-guide-e16a6f5c2be6




  after renameing and running in the appropriate typescript directory i got the follownig errors: 



  https://medium.com/mokshyaprotocol/write-your-first-smart-contract-on-aptos-a-step-by-step-guide-e16a6f5c2be6



my  EC2 node:

i-05dc2566c0c579e46


  
ubuntu@ip-172-31-41-15:~/aptos-core/ecosystem/typescript/sdk/examples/typescript$ sudo apt install node-typescript

https://github.com/mokshyaprotocol/aptos-token-vesting

